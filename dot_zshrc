fastfetch

# Load functions
FUNCTION_DIR=~/.zsh_functions

# Load all function scripts from the directory
for func_file in $FUNCTION_DIR/*.sh; do
  source $func_file
done

HISTFILE=~/.history
HISTSIZE=10000
SAVEHIST=50000

setopt inc_append_history

autoload -Uz compinit && compinit

# Aliases

## This ensures vscode doesn't open multiple times
alias code="open -b com.microsoft.VSCode"

# alias python="python3"

## ---------git----------
alias gp="git pull"
alias gpp="git push"
alias gs="git switch"
alias gsc="git switch -C"
alias gc="git commit -m"
alias gca="git add . && git commit -m"
alias gclean="git reset --hard && git clean -fd"
alias dev="gs dev && gp"
alias main='
  cd "$(git rev-parse --show-toplevel)" &&
  if git show-ref --quiet refs/heads/main; then
    gs main
  elif git show-ref --quiet refs/heads/master; then
    gs master
  else
    echo >&2 "Neither main nor master branch exists."
    exit 1
  fi

  gp
'


## ----------squashing------------
alias how-to-squash='echo "# Reset the current branch to the commit just before the last 12:
git reset --hard HEAD~12
# HEAD@{1} is where the branch was just before the previous command.
# This command sets the state of the index to be as it would just
# after a merge from that commit:
git merge --squash HEAD@{1}

# Commit those squashed changes.  The commit message will be helpfully
# prepopulated with the commit messages of all the squashed commits:
git commit"'

# Variables
export EDITOR="vim"
export SUDO_EDITOR="$EDITOR"

## $PATH Configs

export PATH="${HOME}/bin:${PATH}"
export PATH="/opt/homebrew/opt/libpq/bin:$PATH"
export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
export PATH="${HOME}/.local/bin:$PATH"
export PATH="/Users/aidencline/.cargo/bin:$PATH"

export LDFLAGS="-L/opt/homebrew/opt/libpq/lib"
export CPPFLAGS="-I/opt/homebrew/opt/libpq/include"
export PATH="/opt/homebrew/opt/libpq/bin:$PATH"

## go specific path cfg
export GOPATH="$HOME/go"
export PATH="$GOPATH/bin:$PATH"
# GOPRIVATE is defined in .zshenv

## java specifc path cfg
# export JAVA_HOME="/opt/homebrew/opt/openjdk@11/libexec/openjdk.jdk/Contents/Home"
export JAVA_HOME="$(brew --prefix openjdk@17)"
export PATH="$JAVA_HOME/bin:$PATH"


# Tooling configurations
eval "$(starship init zsh)"
eval "$(zoxide init zsh)"
eval "$(pyenv init --path)"

## FZF
# source <(fzf --zsh)
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# sst
export PATH=/Users/aidencline/.sst/bin:$PATH

# bun completions
[ -s "/Users/aidencline/.bun/_bun" ] && source "/Users/aidencline/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

source ~/.zshenv
